// In this test, some nodes use Yarp for communication with the SMN while the others use MQTT.
// The communication between ports is by default carried out in MQTT, but Yarp can be selected.

//run_simulation(false);
settings.time_unit(millisecond);
settings.final_time(10*second);

// settings.default_comm("yarp");	// Can change the default communication
var ctrl_comm = "mqtt";			// Set the communication of the controller

var motordef = ["name" : "motor",
		"inputs" : ["vol"],
		"outputs" : ["v"],
		"blocks" : [["sampling" : 100*millisecond, "inputs" : ["vol" : false], "outputs" : ["v"]]
			     ]
		];
var motor = node(motordef);

var ctrldef = ["name" : "ctrl",
	       "inputs" : ["v", "sp"],
	       "outputs" : ["u"],
	       "blocks" : [["sampling" : 100*millisecond, "inputs" : ["v", "sp"], "outputs" : ["u"]]
			    ]
	       ];
var ctrl = node(ctrldef, false);  // will add the node manually later
ctrl.set_comm(ctrl_comm);	 // Set the communication explicitly for this node
add_node(ctrl);

var sp = node(["name" : "sp",
			   "outputs" : ["sp"],
			   "blocks" : [["name": "main",
							"id": 0,
							"sampling": 2*second,
							"outputs": ["sp"]]]
			   ], false);
sp.need_updateX(false);
add_node(sp);

connect(sp.port("sp"), ctrl.port("sp"));
connect(motor.port("v"), ctrl.port("v"));
connect(ctrl.port("u"), motor.port("vol"));

print_system();
